name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-release-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-release-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test ./...

    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        
        # Linux builds
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/driftmgr-linux-amd64 ./cmd/driftmgr
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/driftmgr-linux-arm64 ./cmd/driftmgr
        
        # macOS builds
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/driftmgr-darwin-amd64 ./cmd/driftmgr
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/driftmgr-darwin-arm64 ./cmd/driftmgr
        
        # Windows builds
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/driftmgr-windows-amd64.exe ./cmd/driftmgr
        GOOS=windows GOARCH=arm64 go build -ldflags="-s -w" -o dist/driftmgr-windows-arm64.exe ./cmd/driftmgr

    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt

    - name: Create archives
      run: |
        cd dist
        
        # Create tar.gz for Linux and macOS
        tar -czf driftmgr-linux-amd64.tar.gz driftmgr-linux-amd64
        tar -czf driftmgr-linux-arm64.tar.gz driftmgr-linux-arm64
        tar -czf driftmgr-darwin-amd64.tar.gz driftmgr-darwin-amd64
        tar -czf driftmgr-darwin-arm64.tar.gz driftmgr-darwin-arm64
        
        # Create zip for Windows
        zip driftmgr-windows-amd64.zip driftmgr-windows-amd64.exe
        zip driftmgr-windows-arm64.zip driftmgr-windows-arm64.exe

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
        
        # Generate changelog
        echo "## What's Changed" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        
        # Get commits since last tag
        git log --pretty=format:"* %s (%h)" ${PREVIOUS_TAG}..HEAD >> CHANGELOG.md
        
        # Set output for release notes
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        body: ${{ steps.changelog.outputs.changelog }}
        files: |
          dist/driftmgr-linux-amd64.tar.gz
          dist/driftmgr-linux-arm64.tar.gz
          dist/driftmgr-darwin-amd64.tar.gz
          dist/driftmgr-darwin-arm64.tar.gz
          dist/driftmgr-windows-amd64.zip
          dist/driftmgr-windows-arm64.zip
          dist/checksums.txt
        draft: false
        prerelease: false

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: catherinevee/driftmgr
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
