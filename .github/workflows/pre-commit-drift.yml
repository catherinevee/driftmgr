name: Pre-commit Drift Check

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

env:
  GO_VERSION: '1.23'
  DRIFTMGR_VERSION: "latest"

jobs:
  pre-commit-drift-check:
    name: Pre-commit Drift Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for drift comparison
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Install DriftMgr
        run: |
          # Download and install driftmgr
          curl -L https://github.com/catherinevee/driftmgr/releases/latest/download/driftmgr-linux-amd64 -o driftmgr
          chmod +x driftmgr
          sudo mv driftmgr /usr/local/bin/
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}
          
      - name: Check credentials
        run: |
          echo "Checking cloud credentials..."
          driftmgr credentials
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            **/*.tf
            **/*.tfstate
            **/terragrunt.hcl
            **/*.hcl
            
      - name: Check for drift in changed infrastructure
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Checking for drift in changed infrastructure..."
          
          # Get list of changed Terraform files
          CHANGED_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -E '\.(tf|tfstate|hcl)$' || true)
          
          if [ -n "$CHANGED_FILES" ]; then
            echo "Changed files:"
            echo "$CHANGED_FILES"
            
            # Check for drift in the affected resources
            driftmgr state drift \
              --files "$CHANGED_FILES" \
              --severity warning \
              --output drift-report.json
              
            # Check if there are any critical drifts
            if [ -f "drift-report.json" ]; then
              CRITICAL_COUNT=$(jq '.drift_results | map(select(.severity == "critical")) | length' drift-report.json)
              if [ "$CRITICAL_COUNT" -gt 0 ]; then
                echo "[ERROR] Critical drift detected! Please review and fix before committing."
                exit 1
              fi
            fi
          else
            echo "No Terraform files changed, skipping drift check."
          fi
          
      - name: Validate Terraform configurations
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Validating Terraform configurations..."
          
          # Find all .tf files in the repository
          find . -name "*.tf" -type f | while read -r file; do
            echo "Validating $file"
            
            # Check if this is a Terraform file (not just a file with .tf extension)
            if grep -q "terraform\|resource\|data\|variable\|output" "$file"; then
              # Run terraform validate (if terraform is available)
              if command -v terraform &> /dev/null; then
                (cd "$(dirname "$file")" && terraform validate) || {
                  echo "[ERROR] Validation failed for $file"
                  exit 1
                }
              fi
            fi
          done
          
      - name: Check Terragrunt configurations
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Checking Terragrunt configurations..."
          
          # Find all terragrunt.hcl files
          find . -name "terragrunt.hcl" -type f | while read -r file; do
            echo "Checking Terragrunt configuration: $file"
            
            # Basic syntax check (you could add more sophisticated checks here)
            if ! grep -q "terraform\|remote_state\|inputs" "$file"; then
              echo "[ERROR] Invalid Terragrunt configuration: $file"
              exit 1
            fi
          done
          
      - name: Comment on PR with drift status
        if: github.event_name == 'pull_request' && steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## 🔍 Pre-commit Drift Check Results\n\n';
            
            if (fs.existsSync('drift-report.json')) {
              const driftData = JSON.parse(fs.readFileSync('drift-report.json', 'utf8'));
              const criticalCount = driftData.drift_results?.filter(d => d.severity === 'critical').length || 0;
              const warningCount = driftData.drift_results?.filter(d => d.severity === 'warning').length || 0;
              const infoCount = driftData.drift_results?.filter(d => d.severity === 'info').length || 0;
              
              comment += `### Drift Summary\n`;
              comment += `- [ERROR] Critical: ${criticalCount}\n`;
              comment += `- [WARNING]  Warnings: ${warningCount}\n`;
              comment += `- [INFO]  Info: ${infoCount}\n\n`;
              
              if (criticalCount > 0) {
                comment += `**🚨 Critical drift detected! Please review and fix before merging.**\n\n`;
              }
              
              if (driftData.drift_results && driftData.drift_results.length > 0) {
                comment += `### Drift Details\n`;
                driftData.drift_results.slice(0, 10).forEach(drift => {
                  const emoji = drift.severity === 'critical' ? '[ERROR]' : drift.severity === 'warning' ? '[WARNING]' : '[INFO]';
                  comment += `${emoji} **${drift.resource_type}** (${drift.provider}/${drift.region}): ${drift.message}\n`;
                });
                
                if (driftData.drift_results.length > 10) {
                  comment += `\n... and ${driftData.drift_results.length - 10} more drifts. Check the full report for details.\n`;
                }
              }
            } else {
              comment += `[OK] No drift detected in changed infrastructure.\n`;
            }
            
            comment += `\n### Changed Files\n`;
            comment += `\`\`\`\n${{ steps.changed-files.outputs.all_changed_files }}\n\`\`\`\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
            
      - name: Upload drift report
        if: always() && steps.changed-files.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: pre-commit-drift-report-${{ github.run_number }}
          path: drift-report.json
          retention-days: 7
