name: Setup Repository Secrets

on:
  workflow_dispatch:
    inputs:
      docker_username:
        description: 'Docker Hub Username'
        required: false
        type: string
      setup_aws:
        description: 'Setup AWS credentials'
        required: false
        type: boolean
        default: false
      setup_azure:
        description: 'Setup Azure credentials'
        required: false
        type: boolean
        default: false
      setup_gcp:
        description: 'Setup GCP credentials'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: secrets-setup
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Instructions
        run: |
          echo "üìã SECRETS SETUP INSTRUCTIONS"
          echo "============================="
          echo ""
          echo "This workflow helps you understand what secrets need to be configured."
          echo "For security reasons, secrets must be added manually through the GitHub UI."
          echo ""
          echo "üîê Required Secrets for Docker Hub:"
          echo "  ‚Ä¢ DOCKER_HUB_USERNAME: Your Docker Hub username"
          echo "  ‚Ä¢ DOCKER_HUB_TOKEN: Docker Hub access token (not password)"
          echo "    Get token at: https://hub.docker.com/settings/security"
          echo ""
          
          if [[ "${{ inputs.setup_aws }}" == "true" ]]; then
            echo "‚òÅÔ∏è AWS Secrets (Optional):"
            echo "  ‚Ä¢ AWS_ACCESS_KEY_ID: AWS access key"
            echo "  ‚Ä¢ AWS_SECRET_ACCESS_KEY: AWS secret key"
            echo "  ‚Ä¢ AWS_DEFAULT_REGION: Default AWS region (e.g., us-east-1)"
            echo ""
          fi
          
          if [[ "${{ inputs.setup_azure }}" == "true" ]]; then
            echo "‚òÅÔ∏è Azure Secrets (Optional):"
            echo "  ‚Ä¢ AZURE_CLIENT_ID: Azure service principal client ID"
            echo "  ‚Ä¢ AZURE_CLIENT_SECRET: Azure service principal secret"
            echo "  ‚Ä¢ AZURE_TENANT_ID: Azure tenant ID"
            echo "  ‚Ä¢ AZURE_SUBSCRIPTION_ID: Azure subscription ID"
            echo ""
          fi
          
          if [[ "${{ inputs.setup_gcp }}" == "true" ]]; then
            echo "‚òÅÔ∏è GCP Secrets (Optional):"
            echo "  ‚Ä¢ GCP_SERVICE_ACCOUNT_JSON: Complete service account JSON"
            echo ""
          fi
          
          echo "üìç Add secrets at:"
          echo "   https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo ""
          echo "üìç Or use GitHub CLI locally:"
          echo "   gh secret set DOCKER_HUB_USERNAME --repo=${{ github.repository }}"
          echo "   gh secret set DOCKER_HUB_TOKEN --repo=${{ github.repository }}"

      - name: Validate Existing Secrets
        env:
          HAS_DOCKER_USER: ${{ secrets.DOCKER_HUB_USERNAME != '' }}
          HAS_DOCKER_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN != '' }}
          HAS_AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID != '' }}
          HAS_AZURE_CLIENT: ${{ secrets.AZURE_CLIENT_ID != '' }}
          HAS_GCP_JSON: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON != '' }}
        run: |
          echo ""
          echo "üîç Checking existing secrets..."
          echo "================================"
          
          if [[ "$HAS_DOCKER_USER" == "true" ]] && [[ "$HAS_DOCKER_TOKEN" == "true" ]]; then
            echo "‚úÖ Docker Hub credentials are configured"
          else
            echo "‚ùå Docker Hub credentials are NOT configured"
          fi
          
          if [[ "$HAS_AWS_KEY" == "true" ]]; then
            echo "‚úÖ AWS credentials are configured"
          else
            echo "‚ö™ AWS credentials are not configured (optional)"
          fi
          
          if [[ "$HAS_AZURE_CLIENT" == "true" ]]; then
            echo "‚úÖ Azure credentials are configured"
          else
            echo "‚ö™ Azure credentials are not configured (optional)"
          fi
          
          if [[ "$HAS_GCP_JSON" == "true" ]]; then
            echo "‚úÖ GCP credentials are configured"
          else
            echo "‚ö™ GCP credentials are not configured (optional)"
          fi

      - name: Generate Secret Template
        if: inputs.docker_username != ''
        run: |
          echo ""
          echo "üìù Creating secrets template file..."
          cat > secrets-template.env << EOF
          # Copy this template and fill in your values
          # DO NOT COMMIT THIS FILE TO GIT
          
          # Docker Hub
          DOCKER_HUB_USERNAME=${{ inputs.docker_username }}
          DOCKER_HUB_TOKEN=<your-docker-hub-token>
          
          # AWS (Optional)
          AWS_ACCESS_KEY_ID=<your-aws-access-key>
          AWS_SECRET_ACCESS_KEY=<your-aws-secret-key>
          AWS_DEFAULT_REGION=us-east-1
          
          # Azure (Optional)
          AZURE_CLIENT_ID=<your-azure-client-id>
          AZURE_CLIENT_SECRET=<your-azure-client-secret>
          AZURE_TENANT_ID=<your-azure-tenant-id>
          AZURE_SUBSCRIPTION_ID=<your-azure-subscription-id>
          
          # GCP (Optional)
          GCP_SERVICE_ACCOUNT_JSON=<paste-entire-json-here>
          
          # Slack (Optional)
          SLACK_WEBHOOK_URL=<your-slack-webhook-url>
          EOF
          
          echo "Template created: secrets-template.env"
          echo ""
          echo "‚ö†Ô∏è  IMPORTANT: This is just a template."
          echo "   1. Download this file from the workflow artifacts"
          echo "   2. Fill in your actual secret values"
          echo "   3. Add them via GitHub UI or CLI"
          echo "   4. NEVER commit the filled file to Git"

      - name: Upload Template
        if: inputs.docker_username != ''
        uses: actions/upload-artifact@v3
        with:
          name: secrets-template
          path: secrets-template.env
          retention-days: 1