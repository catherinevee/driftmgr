name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GO_VERSION: '1.23'

jobs:
  coverage:
    name: Test Coverage Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
        cache-dependency-path: go.sum

    - name: Download dependencies
      run: go mod download

    - name: Run tests with coverage
      run: |
        echo "Running comprehensive test coverage..."
        go test -v -race -coverprofile=coverage.out -covermode=atomic ./... -timeout 120s

    - name: Generate coverage report
      run: |
        echo "Coverage Summary:"
        go tool cover -func=coverage.out | tail -n 1
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.sha }}
        path: |
          coverage.out
          coverage.html
        retention-days: 30

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        script: |
          const fs = require('fs');
          const coverage = fs.readFileSync('coverage.out', 'utf8');
          const lines = coverage.split('\n');
          const lastLine = lines[lines.length - 2];
          const coveragePercent = lastLine.match(/(\d+\.\d+)%/);

          if (coveragePercent) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“Š **Test Coverage:** ${coveragePercent[0]}`
            });
          }