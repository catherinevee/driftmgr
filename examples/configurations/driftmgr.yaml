# DriftMgr Enhanced Configuration
# This file configures the enhanced drift detection features

version: "1.0"
environment: "production"

# Enhanced Drift Detection Configuration
drift_detection:
  # Sensitive fields that should trigger drift alerts
  sensitive_fields:
  - "tags.environment"
  - "tags.owner"
  - "tags.cost-center"
  - "tags.security-level"
  - "tags.compliance"
  - "security_groups"
  - "iam_policies"
  - "encryption_settings"
  - "backup_configuration"
  - "monitoring_settings"

  # Fields to ignore during drift detection
  ignore_fields:
  - "tags.last-updated"
  - "tags.auto-generated"
  - "tags.temporary"
  - "metadata.timestamp"
  - "metadata.generated-by"

  # Drift detection thresholds
  thresholds:
    critical_percentage: 0.8
    high_percentage: 0.6
    medium_percentage: 0.4
    low_percentage: 0.2

  # Severity rules for different resource types
  severity_rules:
  - resource_type: "aws_instance"
    attribute_path: "tags.environment"
    condition: "production"
    severity: "critical"
    description: "Production environment tags are critical"

  - resource_type: "aws_instance"
    attribute_path: "tags.environment"
    condition: "staging"
    severity: "high"
    description: "Staging environment changes require review"

  - resource_type: "aws_security_group"
    attribute_path: "ingress_rules"
    condition: "any"
    severity: "high"
    description: "Security group rule changes are high priority"

  - resource_type: "aws_security_group"
    attribute_path: "egress_rules"
    condition: "any"
    severity: "high"
    description: "Security group egress changes are high priority"

  - resource_type: "aws_iam_role"
    attribute_path: "policy_arn"
    condition: "any"
    severity: "critical"
    description: "IAM role policy changes are critical"

  - resource_type: "aws_s3_bucket"
    attribute_path: "encryption"
    condition: "disabled"
    severity: "critical"
    description: "S3 bucket encryption is critical for compliance"

  - resource_type: "aws_rds_instance"
    attribute_path: "backup_retention_period"
    condition: "0"
    severity: "high"
    description: "RDS backup retention is important for data protection"

# Compliance Framework Configuration
compliance:
  frameworks:
  - name: "SOC2"
    version: "2017"
    enabled: true
    rules:
    - name: "encryption_required"
      description: "All data must be encrypted at rest"
      resource_types: [ "aws_s3_bucket", "aws_rds_instance", "aws_ebs_volume" ]
      severity: "critical"

    - name: "backup_required"
      description: "Critical resources must have backup enabled"
      resource_types: [ "aws_rds_instance", "aws_ec2_instance" ]
      severity: "high"

  - name: "ISO27001"
    version: "2013"
    enabled: true
    rules:
    - name: "access_control"
      description: "Access control policies must be enforced"
      resource_types: [ "aws_iam_role", "aws_security_group" ]
      severity: "critical"

# Cost Analysis Configuration
cost_analysis:
  enabled: true
  budget_alerts:
  - threshold: 1000
    currency: "USD"
    period: "monthly"
    notification: "email"

  cost_optimization:
    enabled: true
    recommendations:
    - type: "unused_resources"
      severity: "medium"
      action: "review"

    - type: "over_provisioned"
      severity: "low"
      action: "optimize"

# Notification Configuration
notifications:
  email:
    enabled: true
    smtp_server: "smtp.company.com"
    smtp_port: 587
    from_address: "driftmgr@company.com"
    recipients:
    - "devops@company.com"
    - "security@company.com"

  slack:
    enabled: true
    webhook_url: "https://hooks.slack.com/services/..."
    channel: "#drift-alerts"

  teams:
    enabled: false
    webhook_url: ""

# Remediation Configuration
remediation:
  enabled: true
  auto_approval:
  - drift_type: "tags.auto-generated"
    severity: "low"
    auto_approve: true

  - drift_type: "tags.last-updated"
    severity: "low"
    auto_approve: true

  approval_workflow:
  - severity: "critical"
    approvers: [ "security-team", "devops-lead" ]
    timeout_hours: 4

  - severity: "high"
    approvers: [ "devops-team" ]
    timeout_hours: 8

  - severity: "medium"
    approvers: [ "devops-team" ]
    timeout_hours: 24

  - severity: "low"
    auto_approve: true

# Monitoring and Alerting
monitoring:
  metrics:
    prometheus:
      enabled: true
      port: 9090
      path: "/metrics"

    cloudwatch:
      enabled: true
      namespace: "DriftMgr"
      region: "us-east-1"

  dashboards:
    grafana:
      enabled: true
      url: "http://grafana.company.com"
      api_key: ""

# Performance Configuration
performance:
  cache:
    enabled: true
    ttl_minutes: 30
    max_size_mb: 1024

  concurrency:
    max_workers: 10
    timeout_seconds: 300

  discovery:
    batch_size: 100
    rate_limit_per_second: 10

# Security Configuration
security:
  authentication:
    enabled: true
    type: "jwt"
    secret_key: ""

  authorization:
    enabled: true
    rbac:
      roles:
      - name: "admin"
        permissions: [ "*" ]

      - name: "operator"
        permissions: [ "read", "analyze", "remediate" ]

      - name: "viewer"
        permissions: [ "read", "analyze" ]

  encryption:
    at_rest: true
    in_transit: true
    algorithm: "AES-256"

# Logging Configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"
  file:
    enabled: true
    path: "/var/log/driftmgr.log"
    max_size_mb: 100
    max_files: 10

# API Configuration
api:
  version: "v1"
  rate_limiting:
    enabled: true
    requests_per_minute: 100
    burst_size: 20

  cors:
    enabled: true
    allowed_origins: [ "https://app.company.com" ]
    allowed_methods: [ "GET", "POST", "PUT", "DELETE" ]

# Integration Configuration
integrations:
  ci_cd:
    github_actions:
      enabled: true
      webhook_secret: ""

    gitlab:
      enabled: false
      webhook_secret: ""

    jenkins:
      enabled: false
      webhook_url: ""

  terraform:
    cloud:
      enabled: false
      organization: ""
      token: ""

    enterprise:
      enabled: false
      url: ""
      token: ""

# Backup and Recovery
backup:
  enabled: true
  schedule: "0 2 * * *" # Daily at 2 AM
  retention_days: 30
  storage:
    type: "s3"
    bucket: "driftmgr-backups"
    region: "us-east-1"
