# DriftMgr Workspace Management Configuration Example
# This file demonstrates how to configure workspace management features

workspace_management:
  # Root path for workspace discovery
  root_path: "./infrastructure"

  # Environment configurations
  environments:
    dev:
      description: "Development environment"
      promotion:
        source_environment: ""
        target_environment: "staging"
        approval_required: true
        approvers: [ "dev-team", "senior-dev" ]
        auto_promote: false
        validation_steps:
        - "terraform plan"
        - "security scan"
        - "cost analysis"
      policies:
        max_cost_per_month: 1000
        allowed_regions: [ "us-east-1", "us-west-2" ]
        required_tags: [ "environment", "owner", "project" ]

    staging:
      description: "Staging environment for testing"
      promotion:
        source_environment: "dev"
        target_environment: "prod"
        approval_required: true
        approvers: [ "qa-team", "devops" ]
        auto_promote: false
        validation_steps:
        - "terraform plan"
        - "integration tests"
        - "performance tests"
        - "security scan"
      policies:
        max_cost_per_month: 5000
        allowed_regions: [ "us-east-1", "us-west-2", "eu-west-1" ]
        required_tags: [ "environment", "owner", "project", "cost-center" ]

    prod:
      description: "Production environment"
      promotion:
        source_environment: "staging"
        target_environment: ""
        approval_required: true
        approvers: [ "devops-lead", "security-team", "cto" ]
        auto_promote: false
        validation_steps:
        - "terraform plan"
        - "full security audit"
        - "performance validation"
        - "backup verification"
        - "rollback plan"
      policies:
        max_cost_per_month: 50000
        allowed_regions: [ "us-east-1", "us-west-2", "eu-west-1", "ap-southeast-1" ]
        required_tags: [ "environment", "owner", "project", "cost-center", "compliance" ]
        backup_required: true
        monitoring_required: true

  # Blue-green deployment configuration
  blue_green:
    enabled: true
    environments:
      blue:
        name: "blue"
        description: "Blue environment for blue-green deployments"
        traffic_percentage: 100
      green:
        name: "green"
        description: "Green environment for blue-green deployments"
        traffic_percentage: 0

    # Traffic switching configuration
    traffic_switching:
      method: "load_balancer" # or "dns", "service_mesh"
      health_check:
        enabled: true
        path: "/health"
        timeout: 30
        interval: 10
        healthy_threshold: 2
        unhealthy_threshold: 3

    # Rollback configuration
    rollback:
      automatic: true
      trigger_conditions:
      - "error_rate > 5%"
      - "response_time > 2000ms"
      - "health_check_failure"
      rollback_timeout: 300 # seconds

  # Feature flag management
  feature_flags:
    enabled: true
    provider: "launchdarkly" # or "aws-appconfig", "azure-app-configuration"

    # Feature flag configurations
    flags:
      new_ui:
        description: "New user interface rollout"
        environments:
          dev: true
          staging: true
          prod: false
        gradual_rollout:
          enabled: true
          percentage: 0
          target_percentage: 100
          increment: 10
          interval_hours: 24

      beta_feature:
        description: "Beta feature for early adopters"
        environments:
          dev: true
          staging: true
          prod: false
        gradual_rollout:
          enabled: true
          percentage: 25
          target_percentage: 50
          increment: 5
          interval_hours: 48

      experimental:
        description: "Experimental feature"
        environments:
          dev: true
          staging: false
          prod: false
        gradual_rollout:
          enabled: false

  # Workspace discovery patterns
  discovery:
    # File patterns to look for
    patterns:
      terraform_files: [ "*.tf", "*.tfvars" ]
      terragrunt_files: [ "terragrunt.hcl" ]
      state_files: [ "*.tfstate", "*.tfstate.backup" ]

    # Directory patterns to include/exclude
    include_patterns:
    - "environments/*"
    - "modules/*"
    - "stacks/*"

    exclude_patterns:
    - "**/.terraform/**"
    - "**/node_modules/**"
    - "**/.git/**"
    - "**/examples/**"

    # Environment detection patterns
    environment_patterns:
    - "environments/{env}/**"
    - "{env}/**"
    - "**/{env}/**"

    # Region detection patterns
    region_patterns:
    - "regions/{region}/**"
    - "{region}/**"
    - "**/{region}/**"

  # Promotion workflow configuration
  promotion:
    # Default promotion options
    default_options:
      auto_approve: false
      dry_run: true
      parallel: false
      timeout: "30m"

    # Promotion steps
    steps:
      pre_promotion:
      - name: "validate_configuration"
        command: "terraform validate"
        required: true
      - name: "security_scan"
        command: "security-scan"
        required: true
      - name: "cost_analysis"
        command: "cost-analyze"
        required: false

      promotion:
      - name: "terraform_plan"
        command: "terraform plan"
        required: true
      - name: "apply_changes"
        command: "terraform apply"
        required: true
        approval_required: true

      post_promotion:
      - name: "health_check"
        command: "health-check"
        required: true
      - name: "monitoring_setup"
        command: "setup-monitoring"
        required: false
      - name: "backup_verification"
        command: "verify-backup"
        required: true

  # Monitoring and alerting
  monitoring:
    enabled: true

    # Health check endpoints
    health_checks:
    - name: "application_health"
      url: "https://{environment}.example.com/health"
      method: "GET"
      expected_status: 200
      timeout: 30

    # Alerting configuration
    alerts:
      drift_detected:
        enabled: true
        channels: [ "slack", "email" ]
        severity: "warning"

      promotion_failed:
        enabled: true
        channels: [ "slack", "pagerduty" ]
        severity: "critical"

      cost_threshold_exceeded:
        enabled: true
        channels: [ "slack", "email" ]
        severity: "warning"
        threshold: 1000

  # Security and compliance
  security:
    # Required security scans
    scans:
    - name: "terraform_security"
      type: "tfsec"
      required: true
    - name: "dependency_scan"
      type: "snyk"
      required: true
    - name: "container_scan"
      type: "trivy"
      required: false

    # Compliance frameworks
    compliance:
    - framework: "SOC2"
      enabled: true
      controls:
      - "CC6.1"
      - "CC6.2"
      - "CC6.3"
    - framework: "HIPAA"
      enabled: false
      controls:
      - "164.308"
      - "164.310"

    # Access control
    access_control:
      role_based_access:
        enabled: true
        roles:
          developer:
            permissions: [ "read", "promote_dev_to_staging" ]
            environments: [ "dev", "staging" ]
          devops:
            permissions: [ "read", "promote_staging_to_prod", "blue_green_switch" ]
            environments: [ "dev", "staging", "prod" ]
          admin:
            permissions: [ "*" ]
            environments: [ "*" ]
